{"version":3,"sources":["views/pages/profile.jsx"],"names":["Profile","handleInputChange","event","k","target","id","setState","value","toggleModalForm","setStateModal","state","stateModal","getDetailAccount","fetch","method","headers","Headers","Authorization","localStorage","getItem","then","response","json","data","console","log","first_name","email","username","role","catch","error","alert","changePassword","undefined","confirmpassword","newpassword","password","toast","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","body","JSON","stringify","hasOwnProperty","status","success","statusmsg","page","bind","this","className","sm","color","onClick","show","onClose","size","closeButton","htmlFor","type","placeholder","onChange","newestOnTop","rtl","pauseOnFocusLoss","Component"],"mappings":"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","file":"static/js/32.485549e5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CSelect,\r\n  CCardHeader,\r\n} from \"@coreui/react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: 1,\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getDetailAccount();\r\n  }\r\n  handleInputChange = (event) => {\r\n    var k = event.target.id;\r\n    this.setState({\r\n      [k]: event.target.value,\r\n    });\r\n  };\r\n  toggleModalForm = () => {\r\n    this.setStateModal(!this.state.stateModal);\r\n  };\r\n  setStateModal(stateModal) {\r\n    this.setState({\r\n      stateModal: stateModal,\r\n    });\r\n  }\r\n  getDetailAccount = () => {\r\n    fetch(`https://auth.aktiv.co.id/api/auth/v1/user/me`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `${localStorage.getItem(\"token\")}`,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"===== Response Detail ======\", data);\r\n        this.setState({\r\n            first_name:data.first_name,\r\n            email:data.email,\r\n            username:data.username,\r\n            role:data.role,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  changePassword = () => {\r\n    if (\r\n      this.state.confirmpassword == undefined ||\r\n      this.state.newpassword == undefined ||\r\n      this.state.password == undefined\r\n    ) {\r\n      toast.warning(\"Harap Isi Semua Data Terlebih Dahulu\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      if (this.state.confirmpassword === this.state.newpassword) {\r\n        let body = {\r\n          password: this.state.password,\r\n          newpassword: this.state.newpassword,\r\n        };\r\n        fetch(`https://auth.aktiv.co.id/api/auth/v1/user/password`, {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(body),\r\n          headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(\"Ganti Password Response\");\r\n            console.log(data);\r\n            if (data.hasOwnProperty(\"status\")) {\r\n              if (data.status === \"OK\") {\r\n                toast.success(\"Ganti Password Berhasil\", {\r\n                  position: \"top-right\",\r\n                  autoClose: 1000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                });\r\n                this.setState({\r\n                  confirmpassword: \"\",\r\n                  newpassword: \"\",\r\n                  password: \"\",\r\n                });\r\n                this.toggleModalForm();\r\n              } else {\r\n                toast.error(\"Ganti Password Gagal \" + data.statusmsg, {\r\n                  position: \"top-right\",\r\n                  autoClose: 5000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  draggable: true,\r\n                  progress: undefined,\r\n                });\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => console.error(error));\r\n      } else {\r\n        toast.error(\"Password Tidak Sesuai\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            <span>\r\n              <strong>Profile</strong>\r\n            </span>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CRow className=\"mb-2\">\r\n              <CCol sm=\"3\">Nama Lengkap</CCol>\r\n              <CCol>: {this.state.first_name}</CCol>\r\n            </CRow>\r\n            <CRow className=\"my-2\">\r\n              <CCol sm=\"3\">Alamat Email</CCol>\r\n              <CCol>: {this.state.email}</CCol>\r\n            </CRow>\r\n            <CRow className=\"my-2\">\r\n              <CCol sm=\"3\">username</CCol>\r\n              <CCol>: {this.state.username}</CCol>\r\n            </CRow>\r\n            <CRow className=\"my-2\">\r\n              <CCol sm=\"3\">Role</CCol>\r\n              <CCol>: {this.state.role}</CCol>\r\n            </CRow>\r\n            <CRow className='mt-2'><CCol><CButton color=\"info\" onClick={this.toggleModalForm}>Ganti Password</CButton></CCol></CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n        <CModal\r\n          show={this.state.stateModal}\r\n          onClose={this.toggleModalForm}\r\n          size=\"sm\"\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>Ganti Password</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"password\">Password Lama</CLabel>\r\n                  <CInput\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Masukkan Password Lama\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"newpassword\">Password Baru</CLabel>\r\n                  <CInput\r\n                    id=\"newpassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Masukkan Password Baru\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"confirmpassword\">Konfirmasi Password</CLabel>\r\n                  <CInput\r\n                    id=\"confirmpassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Konfirmasi Password Baru\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            \r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton\r\n              className=\"btn-facebook btn-brand mt-4 mr-2\"\r\n              onClick={() => {\r\n                this.changePassword();\r\n              }}\r\n            >\r\n              <span>Simpan</span>\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}