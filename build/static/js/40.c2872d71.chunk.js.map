{"version":3,"sources":["views/users/Users.js"],"names":["getBadge","status","Users","getPuskesmasList","fetch","method","headers","Headers","Authorization","localStorage","getItem","then","response","json","data","listPuskesmas","items","map","item","key","id","label","puskesmas","setState","catch","error","alert","getUsersData","res","userdata","filter","element","role","name","profile","first_name","console","log","usersData","totalPage","total_page","handleRolesChange","event","k","target","value","handleInputChange","addUserData","body","username","state","password","roles","email","puskesmasID","birth_date","noHp","alamatDom","profesi","institusi","gender","volunteerLink","org_token","JSON","stringify","hasOwnProperty","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","toggleModal","statusmsg","pageChange","newPage","page","index","setModal","modal","usersDetail","editId","editActive","bind","this","window","confirm","xl","className","onClick","fields","_classes","sorter","hover","striped","tableFilter","itemsPerPage","scopedSlots","color","action","data-toggle","data-placement","title","shape","size","activateUser","deleteUser","show","onClose","closeButton","htmlFor","type","placeholder","onChange","autoComplete","style","display","newestOnTop","rtl","pauseOnFocusLoss","Component"],"mappings":"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","file":"static/js/40.c2872d71.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CPagination,\r\n  CButton,\r\n  CContainer,\r\n  CRow,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CSelect,\r\n  CInput,\r\n  CFormGroup,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case \"Aktif\":\r\n      return \"info\";\r\n    case \"Non Aktif\":\r\n      return \"secondary\";\r\n    default:\r\n      return \"secondary\";\r\n  }\r\n};\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      usersData: [],\r\n      listPuskesmas: [],\r\n      totalPage: 1,\r\n      usersDetail: null,\r\n      page: 1,\r\n      editId: 0,\r\n      editActive: 0,\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsersData();\r\n    this.getPuskesmasList();\r\n  }\r\n  getPuskesmasList = () => {\r\n    fetch(`https://api.aktiv.co.id/api/aktivengine/v1/puskesmas/list`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `${localStorage.getItem(\"token\")}`,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        var listPuskesmas = data.data.items.map((item) => {\r\n          return {\r\n            ...item,\r\n            key: item.id,\r\n            label: item.puskesmas,\r\n          };\r\n        });\r\n        this.setState({\r\n          listPuskesmas: listPuskesmas,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getUsersData = () => {\r\n    fetch(`https://auth.aktiv.co.id/api/auth/v1/user/list`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `${localStorage.getItem(\"token\")}`,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((res) => {\r\n        var userdata = [];\r\n        var _tempUser = [];\r\n        _tempUser = res.data.items.filter((element) => {\r\n          return (\r\n            element.role != \"volunteer\" &&\r\n            element.role != \"admin\" &&\r\n            element.role != \"patient\"\r\n          );\r\n        });\r\n        userdata = _tempUser.map((item) => {\r\n          return {\r\n            ...item,\r\n            name: item.profile.first_name ? item.profile.first_name : \"\",\r\n          };\r\n        });\r\n        console.log(userdata);\r\n        this.setState({\r\n          usersData: userdata,\r\n          totalPage: res.data.total_page,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  handleRolesChange = (event) => {\r\n    var k = event.target.id;\r\n\r\n    this.setState({\r\n      [k]: event.target.value,\r\n    });\r\n  };\r\n  handleInputChange = (event) => {\r\n    var k = event.target.id;\r\n    this.setState({\r\n      [k]: event.target.value,\r\n    });\r\n  };\r\n  addUserData = () => {\r\n    let body = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      role: this.state.roles,\r\n      email: this.state.email,\r\n      first_name: this.state.first_name,\r\n      puskesmasID: this.state.puskesmasID,\r\n      birth_date: `${this.state.birth_date} 00:00:00`,\r\n      noHp: this.state.noHp,\r\n      alamatDom: this.state.alamatDom,\r\n      profesi: this.state.profesi,\r\n      institusi: this.state.institusi,\r\n      gender: this.state.gender,\r\n      volunteerLink: this.state.volunteerLink,\r\n      org_token: \"uWOZxPN6io8G4uoK6ZFsPzfJoOlgLpmI\",\r\n    };\r\n    console.log(body);\r\n    fetch(\"https://auth.aktiv.co.id/api/auth/v1/user/add\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.hasOwnProperty(\"status\")) {\r\n          if (data.status === \"OK\") {\r\n            toast.success(\"Tambah Berhasil\", {\r\n              position: \"top-right\",\r\n              autoClose: 1000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            this.toggleModal();\r\n            this.getUsersData();\r\n          } else {\r\n            toast.error(\"Tambah Gagal: \" + data.statusmsg, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n  // updateUserData = () => {\r\n  //   let body = {\r\n  //     id: this.state.editId,\r\n  //     email: this.state.editEmail,\r\n  //     first_name: this.state.editName,\r\n  //     role: this.state.editRoles,\r\n  //     is_active: this.state.editActive,\r\n  //   };\r\n  //   console.log(\"Update Body\");\r\n  //   console.log(body);\r\n  //   fetch(`https://auth.aktiv.co.id/api/auth/v1/user/me`, {\r\n  //     method: \"PUT\",\r\n  //     body: JSON.stringify(body),\r\n  //     headers: new Headers({\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       Authorization: `${localStorage.getItem(\"token\")}`,\r\n  //     }),\r\n  //   })\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       console.log(\"Update User Response\");\r\n  //       console.log(data);\r\n\r\n  //       toast.success(\"Update Berhasil\", {\r\n  //         position: \"top-right\",\r\n  //         autoClose: 5000,\r\n  //         hideProgressBar: false,\r\n  //         closeOnClick: true,\r\n  //         pauseOnHover: true,\r\n  //         draggable: true,\r\n  //         progress: undefined,\r\n  //       });\r\n  //       this.setState({\r\n  //         modal: false,\r\n  //       });\r\n  //       this.getUsersData();\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n  pageChange = (newPage) => {\r\n    this.setState({ page: newPage });\r\n    this.getUsersData();\r\n  };\r\n  toggleModal = (index) => {\r\n    this.setModal(!this.state.modal);\r\n  };\r\n  setModal(modal) {\r\n    this.setState({\r\n      modal: modal,\r\n    });\r\n  }\r\n  deleteUser(item) {\r\n    var confirmation = window.confirm(\r\n      \"Apakah anda yakin ingin menghapus data ini?\"\r\n    );\r\n    if (confirmation) {\r\n      let body = {\r\n        id: item.id,\r\n      };\r\n      fetch(`https://auth.aktiv.co.id/api/auth/v1/user/delete`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify(body),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${localStorage.getItem(\"token\")}`,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"====== Delete User Response =======\");\r\n          console.log(data);\r\n          if (data.hasOwnProperty(\"status\")) {\r\n            if (data.status === \"OK\") {\r\n              toast.success(\"Delete Berhasil\", {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n              this.getUsersData();\r\n            } else {\r\n              toast.error(\"Delete Gagal \" + data.statusmsg, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n            }\r\n          }\r\n          \r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n  // activateUser(item) {\r\n  //   var confirmation = window.confirm(\r\n  //     \"Apakah anda yakin ingin mengaktifkan akun ini?\"\r\n  //   );\r\n  //   if (confirmation) {\r\n  //     let body = {\r\n  //       id: item.id,\r\n  //       email: item.email,\r\n  //       role: item.role,\r\n  //       is_active: true,\r\n  //     };\r\n  //     fetch(`${process.env.REACT_APP_BASE_URL}/api/auth/v1/user/update`, {\r\n  //       method: \"PUT\",\r\n  //       body: JSON.stringify(body),\r\n  //       headers: new Headers({\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Authorization: `${localStorage.getItem(\"token\")}`,\r\n  //       }),\r\n  //     })\r\n  //       .then((response) => response.json())\r\n  //       .then((data) => {\r\n  //         this.getUsersData();\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   }\r\n  // }\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        <CCol xl={12}>\r\n              <CRow>\r\n               \r\n                <CCol className=\"d-flex flex-row-reverse\">\r\n                  <CButton\r\n                    className=\"btn-facebook btn-brand mb-4 mr-2\"\r\n                    onClick={() => {\r\n                     this.toggleModal();\r\n                    }}\r\n                  >\r\n                    <span>Tambah User</span>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n          <CCard>\r\n   \r\n         \r\n            <CCardBody>\r\n              <CDataTable\r\n                items={this.state.usersData}\r\n                fields={[\r\n                  {\r\n                    key: \"name\",\r\n                    label: \"Nama\",\r\n                    _classes: \"font-weight-bold\",\r\n                  },\r\n                  \"username\",\r\n                  \"role\",\r\n                  // \"status\",\r\n                  {\r\n                    key: \"action\",\r\n                    sorter: false,\r\n                  },\r\n                ]}\r\n                hover\r\n                sorter={true}\r\n                striped\r\n                tableFilter\r\n                itemsPerPage={50}\r\n                // activePage={this.state.page}\r\n                // clickableRows\r\n                // onRowClick={(item) => history.push(`/admin/users/${item.id}`)}\r\n                scopedSlots={{\r\n                  status: (item) => (\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>\r\n                        {item.status}\r\n                      </CBadge>\r\n                      {/* <CBadge>{item.status}</CBadge> */}\r\n                    </td>\r\n                  ),\r\n                  action: (item, index) => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        {item.status === \"Non Aktif\" && (\r\n                          <CButton\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"top\"\r\n                            title=\"Izinkan\"\r\n                            className=\"mr-1\"\r\n                            color=\"info\"\r\n                            shape=\"rounded\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              this.activateUser(item);\r\n                            }}\r\n                          >\r\n                            <CIcon name=\"cil-check\" /> Aktivasi\r\n                          </CButton>\r\n                        )}\r\n\r\n                        {/* <CButton\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"top\"\r\n                          title=\"Edit Data\"\r\n                          className=\"mr-1\"\r\n                          color=\"info\"\r\n                          //   variant=\"outline\"\r\n                          shape=\"rounded\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            this.toggleModal(index);\r\n                            console.log(item);\r\n                            this.setState({\r\n                              editId: item.id,\r\n                              editEmail: item.email,\r\n                              editName: item.name,\r\n                              editRoles: item.role,\r\n                              editActive: item.is_active,\r\n                            });\r\n                          }}\r\n                        >\r\n                          <CIcon name=\"cil-pencil\" /> Edit\r\n                        </CButton> */}\r\n                        <CButton\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"top\"\r\n                          title=\"Hapus Data\"\r\n                          color=\"danger\"\r\n                          shape=\"rounded\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            this.deleteUser(item);\r\n                          }}\r\n                        >\r\n                          <CIcon name=\"cil-trash\" /> \r\n                          {/* Hapus */}\r\n                        </CButton>\r\n                      </td>\r\n                    );\r\n                  },\r\n                }}\r\n              />\r\n              {/* <CPagination\r\n                activePage={this.state.page}\r\n                onActivePageChange={this.pageChange}\r\n                pages={this.state.totalPage}\r\n                doubleArrows={true}\r\n                align=\"center\"\r\n              /> */}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CModal show={this.state.modal} onClose={this.toggleModal}>\r\n          <CModalHeader closeButton>Edit Data</CModalHeader>\r\n          <CModalBody>\r\n            <CContainer>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"username\">Username</CLabel>\r\n                  <CInput\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    placeholder=\"Masukkan Username\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"email\">Email</CLabel>\r\n                  <CInput\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Masukkan Email\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"password\">Password</CLabel>\r\n                  <input\r\n                    type=\"text\"\r\n                    autoComplete=\"username\"\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <input type=\"password\" style={{ display: \"none\" }} />\r\n                  <CInput\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Masukkan password\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"first_name\">Nama</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"first_name\"\r\n                    placeholder=\"Masukkan Nama\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"birth_date\">Tanggal Lahir</CLabel>\r\n                  <CInput\r\n                    type=\"date\"\r\n                    id=\"birth_date\"\r\n                    placeholder=\"Masukkan Tanggal Lahir\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"noHp\">No Hp</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"noHp\"\r\n                    placeholder=\"Masukkan No Hp\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"alamatDom\">Alamat Domisili</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"alamatDom\"\r\n                    placeholder=\"Masukkan Alamat Domisili\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"profesi\">Profesi</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"profesi\"\r\n                    placeholder=\"Masukkan Profesi\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            {/* <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"puskesmasID\">Puskesmas</CLabel>\r\n                  <CSelect id=\"puskesmasID\" onChange={this.handleInputChange}>\r\n                    <option value=\"\" key=\"\">\r\n                      -- Pilih Puskesmas --\r\n                    </option>\r\n                    {this.state.listPuskesmas.map((item) => {\r\n                      return (\r\n                        <option value={item.key} key={item.key}>\r\n                          {item.label}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </CSelect>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow> */}\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"institusi\">Institusi</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    id=\"institusi\"\r\n                    placeholder=\"Masukkan Institusi\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"gender\">Jenis Kelamin</CLabel>\r\n                  <CSelect\r\n                    id=\"gender\"\r\n                    onChange={this.handleInputChange}\r\n                    value={this.state.gender}\r\n                  >\r\n                    <option value=\"\" key=\"\">\r\n                      -- Pilih Jenis Kelamin --\r\n                    </option>\r\n                    <option value=\"L\" key=\"L\">\r\n                      Laki-Laki\r\n                    </option>\r\n                    <option value=\"P\" key=\"P\">\r\n                      Perempuan\r\n                    </option>\r\n                  </CSelect>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol className=\"my-1\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"gender\">Role</CLabel>\r\n                  <CSelect\r\n                    id=\"roles\"\r\n                    value={this.state.roles}\r\n                    onChange={this.handleRolesChange.bind(this)}\r\n                  >\r\n                    <option value=\"\" key=\"\">\r\n                      -- Pilih Role --\r\n                    </option>\r\n\r\n                    <option value=\"operator\" key=\"operator\">\r\n                    Admin\r\n                    </option>\r\n                    <option value=\"dinkes\" key=\"dinkes\">\r\n                    Dinas Kesehatan\r\n                    </option>\r\n                 \r\n                  </CSelect>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            \r\n            </CContainer>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={this.addUserData}>\r\n              Simpan\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={true}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </CRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}