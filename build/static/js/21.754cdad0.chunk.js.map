{"version":3,"sources":["../node_modules/moment/locale/id.js","views/users_management/user_patient.jsx"],"names":["moment","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","meridiemParse","meridiemHour","hour","meridiem","hours","minutes","isLower","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","week","dow","doy","factory","require","idLocale","UserPatientDetail","Date","now","locale","format","handleInputChange","event","k","target","id","setState","value","getVolunteerList","fetch","method","headers","Headers","Authorization","localStorage","getItem","then","response","json","data","volunteerList","console","log","items","map","item","volunteerID","volunteer","profile","first_name","volunteerLink","volunteerNoHp","noHp","puskesmasID","puskesmas","catch","error","alert","getDetailPatient","props","match","params","akunID","patientDetail","leaderName","email","username","akunNoHp","isAktivUser","alamatDomisili","address","alamatIsolasiMandiri","selectedVolunteer","totalPage","total_page","updateDataPatient","state","forEach","element","body","role","password","members","JSON","stringify","hasOwnProperty","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","statusmsg","deleteMember","window","confirm","memberID","history","goBack","page","bind","this","className","onClick","action","encType","row","md","xs","type","onChange","newestOnTop","rtl","pauseOnFocusLoss","Component","withRouter"],"mappings":"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","file":"static/js/21.754cdad0.chunk.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Indonesian [id]\n//! author : Mohammad Satrio Utomo : https://github.com/tyok\n//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var id = moment.defineLocale('id', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Besok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kemarin pukul] LT',\n            lastWeek: 'dddd [lalu pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: 'semenit',\n            mm: '%d menit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    return id;\n\n})));\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport moment from \"moment\";\r\nimport {\r\n  CSelect,\r\n  CButton,\r\n  CInput,\r\n  CCard,\r\n  CCardBody,\r\n  CFormGroup,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CRow,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst idLocale = require(\"moment/locale/id\");\r\nvar dateNow = moment(Date.now()).locale(\"id\", idLocale).format(\"LLLL\");\r\n\r\nclass UserPatientDetail extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: 1,\r\n      totalPage: 1,\r\n      akunID: \"\",\r\n      leaderName: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      // password: \"\",\r\n      akunNoHp: \"\",\r\n      isAktivUser: false,\r\n      // provinsiID: \"\",\r\n      // provinsi: \"\",\r\n      // kotaKabID: \"\",\r\n      // kotaKab: \"\",\r\n      // kecamatanID: \"\",\r\n      // kecamatan: \"\",\r\n      // kelurahanID: \"\",\r\n      // kelurahan: \"\",\r\n      // kodePos: \"\",\r\n      alamatDomisili: \"\",\r\n      alamatIsolasiMandiri: \"\",\r\n      selectedVolunteer: \"\",\r\n\r\n      volunteerList: [],\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      akunID: this.props.match.params.akunID,\r\n    });\r\n    this.getDetailPatient();\r\n    this.getVolunteerList();\r\n  }\r\n  handleInputChange = (event) => {\r\n    var k = event.target.id;\r\n    this.setState({\r\n      [k]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // getProvince = () => {\r\n  //   fetch(\r\n  //     `http://dev.farizdotid.com/api/daerahindonesia/provinsi`,\r\n  //     {\r\n  //       method: \"GET\",\r\n  //       headers: new Headers({\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Authorization: `${localStorage.getItem(\"token\")}`,\r\n  //       }),\r\n  //     }\r\n  //   )\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       console.log(\"===== GET PROVINCE RESPONSE =====\");\r\n  //       console.log(data);\r\n  //       var memberDetail;\r\n  //       var patientDetail;\r\n  //       patientDetail = data.data;\r\n  //       this.setState({\r\n  //         patientDetail: patientDetail,\r\n  //         totalPage: data.data.total_page,\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n\r\n  getVolunteerList = () => {\r\n    fetch(`https://auth.aktiv.co.id/api/auth/v1/user/list?role=volunteer`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `${localStorage.getItem(\"token\")}`,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"===== GET VOLUNTEER RESPONSE =====\");\r\n        console.log(data);\r\n        var volunteerList;\r\n        volunteerList = data.data.items.map((item) => {\r\n          return {\r\n            volunteerID: item.id,\r\n            volunteer: item.profile.first_name,\r\n            volunteerLink: item.profile.volunteerLink,\r\n            volunteerNoHp: item.profile.noHp,\r\n            puskesmasID: item.profile.puskesmasID,\r\n            puskesmas: item.profile.puskesmas,\r\n          };\r\n        });\r\n        this.setState({\r\n          volunteerList: volunteerList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getDetailPatient = () => {\r\n    fetch(\r\n      `https://api.aktiv.co.id/api/aktivengine/v1/patient/get?id=${this.props.match.params.akunID}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `${localStorage.getItem(\"token\")}`,\r\n        }),\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"===== GET PATIENT DETAIL RESPONSE =====\");\r\n        console.log(data);\r\n        var patientDetail;\r\n        patientDetail = data.data;\r\n        this.setState({\r\n          patientDetail: patientDetail,\r\n          leaderName: patientDetail.leaderName,\r\n          email: patientDetail.email,\r\n          username: patientDetail.username,\r\n          akunNoHp: patientDetail.akunNoHp,\r\n          isAktivUser: patientDetail.isAktivUser,\r\n          alamatDomisili: patientDetail.address.alamatDomisili,\r\n          alamatIsolasiMandiri: patientDetail.address.alamatIsolasiMandiri,\r\n          selectedVolunteer: patientDetail.volunteerID,\r\n          totalPage: data.data.total_page,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  updateDataPatient = () => {\r\n    var selectedVolunteer;\r\n    this.state.volunteerList.forEach((element)=>{\r\n      if(element.volunteerID===this.state.selectedVolunteer){\r\n        selectedVolunteer = element;\r\n      }\r\n    })\r\n    var body = {\r\n      id:this.state.patientDetail.id,\r\n      akunID: this.state.akunID,\r\n      role:this.state.patientDetail.role,\r\n      leaderName: this.state.leaderName,\r\n      email: this.state.email,\r\n      password: this.state.patientDetail.password,\r\n      username: this.state.username,\r\n      akunNoHp: this.state.akunNoHp,\r\n      isAktivUser: this.state.isAktivUser,    \r\n      address:{\r\n        ...this.state.patientDetail.address,\r\n        alamatDomisili: this.state.alamatDomisili,\r\n        alamatIsolasiMandiri: this.state.alamatIsolasiMandiri,\r\n      },\r\n      members:this.state.patientDetail.members,\r\n      volunteerID:selectedVolunteer.volunteerID ,\r\n      volunteer:selectedVolunteer.volunteer ,\r\n      volunteerLink:selectedVolunteer.volunteerLink ,\r\n      volunteerNoHp:selectedVolunteer.volunteerNoHp ,\r\n      puskesmasID:selectedVolunteer.puskesmasID ,\r\n      // puskesmas:selectedVolunteer.puskesmas ,\r\n    };\r\n    console.log(\"Body Update Patient\",body);\r\n    fetch(\"https://api.aktiv.co.id/api/aktivengine/v1/patient/update\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(body),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.hasOwnProperty(\"status\")) {\r\n          if (data.status === \"OK\") {\r\n            toast.success(\"Update Berhasil\", {\r\n              position: \"top-right\",\r\n              autoClose: 1000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            this.getDetailPatient();\r\n          } else {\r\n            toast.error(\"Update Gagal \" + data.statusmsg, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n  deleteMember = () => {\r\n    if (window.confirm(\"Apakah anda yakin ingin menghapus data ini\")) {\r\n      var body = {\r\n        akunID: this.state.akunID,\r\n        members: {\r\n          memberID: this.state.memberID,\r\n        },\r\n      };\r\n      fetch(\r\n        `https://api.aktiv.co.id/api/aktivengine/v1/patient/member/delete`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `${localStorage.getItem(\"token\")}`,\r\n          }),\r\n          body: JSON.stringify(body),\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"====== Delete Member Response =======\");\r\n          console.log(data);\r\n          if (data.hasOwnProperty(\"status\")) {\r\n            if (data.status === \"OK\") {\r\n              toast.success(\"Delete Berhasil\", {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n              this.props.history.goBack();\r\n            } else {\r\n              toast.error(\"Delete Gagal \" + data.statusmsg, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n            }\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <CRow>\r\n          <CCol>\r\n            <CCard>\r\n              <CCardHeader>\r\n                <strong> Biodata</strong>\r\n                <CButton\r\n                  className=\"float-right btn-facebook btn-brand\"\r\n                  onClick={() => {\r\n                    this.updateDataPatient();\r\n                  }}\r\n                >\r\n                  Simpan\r\n                </CButton>\r\n                {/* <CButton\r\n                  color=\"danger\"\r\n                  className=\"float-right mr-2\"\r\n                  onClick={() => {\r\n                    this.deleteMember();\r\n                  }}\r\n                >\r\n                  Hapus Member Ini\r\n                </CButton> */}\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CForm\r\n                  action=\"\"\r\n                  method=\"post\"\r\n                  encType=\"multipart/form-data\"\r\n                  className=\"form-horizontal\"\r\n                >\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Username</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>\r\n                        <strong>: {this.state.username}</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Email</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"email\"\r\n                          type=\"text\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.email}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Nama Kepala Keluarga</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"leaderName\"\r\n                          type=\"text\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.leaderName}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>No Hp</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"akunNoHp\"\r\n                          type=\"text\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.akunNoHp}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n\r\n                  {/* <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Jenis Kelamin</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CSelect\r\n                          id=\"gender\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.gender}\r\n                        >\r\n                          <option value=\"\" key=\"\">\r\n                            -- Pilih Jenis Kelamin --\r\n                          </option>\r\n                          <option value=\"L\" key=\"L\">\r\n                            Laki-Laki\r\n                          </option>\r\n                          <option value=\"P\" key=\"P\">\r\n                            Perempuan\r\n                          </option>\r\n                        </CSelect>\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup> */}\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Alamat Domisili</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"alamatDomisili\"\r\n                          type=\"text\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.alamatDomisili}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Alamat Isolasi</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"alamatIsolasiMandiri\"\r\n                          type=\"text\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.alamatIsolasiMandiri}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                  {/* <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Tanggal Mulai Isolasi</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CInput\r\n                          id=\"tglIsolasiStr\"\r\n                          type=\"date\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.tglIsolasiStr}\r\n                        />\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup> */}\r\n                  {/* <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Status</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CSelect\r\n                          id=\"statusMonitoring\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.statusMonitoring}\r\n                        >\r\n                          <option value=\"\" key=\"\">\r\n                            -- Pilih Tahapan --\r\n                          </option>\r\n                          {this.state.statusList.map((item) => {\r\n                            return (\r\n                              <option value={item.status} key={item.status}>\r\n                                {item.status}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </CSelect>\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup> */}\r\n                  <CFormGroup row>\r\n                    <CCol md=\"3\">\r\n                      <CLabel>\r\n                        <strong>Pilih Volunteer</strong>\r\n                      </CLabel>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">\r\n                        <CSelect\r\n                          id=\"selectedVolunteer\"\r\n                          onChange={this.handleInputChange}\r\n                          value={this.state.selectedVolunteer}\r\n                        >\r\n                          <option value=\"\" key=\"\">\r\n                            -- Pilih Volunteer --\r\n                          </option>\r\n                          {this.state.volunteerList.map((item) => {\r\n                            return (\r\n                              <option\r\n                                value={item.volunteerID}\r\n                                key={item.volunteerID}\r\n                              >\r\n                                {item.volunteer} ({item.puskesmas})\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </CSelect>\r\n                      </p>\r\n                    </CCol>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(UserPatientDetail);\r\n"],"sourceRoot":""}